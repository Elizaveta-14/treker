name: Django CI/CD Pipeline

on: [push, pull_request]

jobs:

  lint:
    runs-on: ubuntu-latest
    steps:

      # Проверяем репозиторий
      - name: Check out  code
        uses: actions/checkout@v3

      # Устанавливаем Python
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      # Устанавливаем flake8
      - name: Install flake8
        run: |
          python -m pip install --upgrade pip
          pip install flake8

      # Запускаем flake8
      - name: Run flake8
        run: flake8 .


  test:
    name: Run Tests
    runs-on: ubuntu-latest
    needs: lint

    services:
      postgres:
        image: postgres:15-alpine
        env:
          POSTGRES_USER: 'test'
          POSTGRES_PASSWORD: 'test'
          POSTGRES_DB: 'MyDRFCourse'
        ports:
          - '5432:5432'
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5


    steps:
      # Проверяем репозиторий
      - name: Checkout code
        uses: actions/checkout@v3

      # Устанавливаем Python
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      # Устанавливаем зависимости проекта
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      # Проверка кода
      - name: Run tests
        run: |
          python manage.py test
        env:
          SECRET_KEY: ${{ secrets.DJANGO_SECRET_KEY }}
          POSTGRES_DB: MyDRFCourse
          POSTGRES_USER: test
          POSTGRES_PASSWORD: test
          POSTGRES_HOST: localhost
          POSTGRES_PORT: 5432
#
  build:
    runs-on: ubuntu-latest
    needs: test

    steps:

      # Проверяем репозиторий
      - name: Check out code
        uses: actions/checkout@v3

      # Подключаемся к DockerHUB
      - name: Log in to Docker Hub
        run: echo ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }} | docker login -u ${{ secrets.DOCKER_HUB_USERNAME }} --password-stdin

      # Собираем Docker контейнер
      - name: Build Docker image
        run: docker build -t ${{ secrets.DOCKER_HUB_USERNAME }}/myapp:${{ github.sha }} .

      # Отправляем контейнер в DockerHUB
      - name: Push Docker image to Docker Hub
        run: docker push ${{ secrets.DOCKER_HUB_USERNAME }}/myapp:${{ github.sha }}

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:

    - name: Set up SSH
      uses: webfactory/ssh-agent@v0.9.0
      with:
        ssh-private-key: ${{ secrets.SSH_KEY }}

    - name: Deploy to Server
      run: |
        ssh -t -o StrictHostKeyChecking=no ${{ secrets.SSH_USER }}@${{ secrets.SERVER_IP }} << 'EOF'
          sudo docker pull ${{ secrets.DOCKER_HUB_USERNAME }}/myapp:${{ github.sha }}
          sudo docker stop myapp || true
          sudo docker rm myapp || true
          sudo docker run -d --name myapp -p 80:8000 ${{ secrets.DOCKER_HUB_USERNAME }}/myapp:${{ github.sha }}
        EOF